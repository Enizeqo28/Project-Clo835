name: Deploy to ECR

on:
  pull_request:
    branches: [main]  # Change this to 'development' if needed
    types: [closed]

jobs:
  build:
    if: github.event.pull_request.merged == true  # Runs only when PR is merged
    name: Build and Push Images
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    - name: Build, tag, and push **WebApp image** to Amazon ECR
      env:
        ECR_REGISTRY: 129952717198.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: assignment1-dev-webapp-repo  # Your WebApp repository name
        APPLICATION_IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$APPLICATION_IMAGE_TAG ./webapp
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$APPLICATION_IMAGE_TAG

    - name: Build, tag, and push **MySQL image** to Amazon ECR
      env:
        ECR_REGISTRY: 129952717198.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: assignment1-dev-mysql-repo  # Your MySQL repository name
        SQL_IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$SQL_IMAGE_TAG -f Dockerfile_mysql ./db
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SQL_IMAGE_TAG
